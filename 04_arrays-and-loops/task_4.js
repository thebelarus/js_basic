// Задание 4
// Цель задания
// Научиться работать одновременно с несколькими массивами. Познакомиться с реальным практическим примером применения массивов и циклов в приложениях (слайдер дней календаря, планировщик и т.п.). Соединить знания о массивах, циклах, строках и математических операциях.
// Задание
// Сгенерировать массив чисел 1–31 включительно (числа месяца). Вывести с помощью console.log для каждого из чисел строку ${число} января, ${день недели}. День недели 1 января должен задаваться с помощью переменной, то есть программа должна корректно работать для любого дня недели, с которого начинается месяц. Подсказка 1: для дней недели можно создать массив с названиями дней, чтобы обращаться к нему по индексу. Подсказка 2: индекс дня недели можно вычислить с помощью операции остатка от деления.
// Проверка результата
// Для любого указанного дня недели 1 января все дни выводятся корректно. Например, для вторника:
// 1 января, вторник
// 2 января, среда
// 3 января, четверг
// 4 января, пятница
// 5 января, суббота
// 6 января, воскресенье
// 7 января, понедельник
// и т.д.
// Критерии оценки
// **Код работает в соответствии с заданием.
// Рекомендации к выполнению
// Подсказка: индекс дня недели можно вычислить с помощью операции остатка от деления.

function generateJanyaryDaysCalendar(startDayName){
  // Generate Janyary (31 days named) calendar for selected start day russian name.
  let nameOfDays = ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье'];
  startDayNumber = nameOfDays.indexOf(startDayName);
  if (startDayNumber >= 0) {
    for (let day = 1; day <= 31; ++day) {
      console.log(`${day} января, ${nameOfDays[startDayNumber]}`);
      startDayNumber = startDayNumber == nameOfDays.length - 1 ? 0: ++startDayNumber;
    }
  }
  else {
    console.log(`${startDayName}, некорректное имя дня недели.`);
  }
}

generateJanyaryDaysCalendar('вторник');
generateJanyaryDaysCalendar('вторNник');
generateJanyaryDaysCalendar('воскресенье');
